{"version":3,"file":"static/js/241.a30c6dd6.chunk.js","mappings":"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","sources":["components/Confirm.jsx","components/Gyroscope.jsx","pages/Test/Test.jsx","pages/Test/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Utility from '../scripts/utility';\n\nimport '../css/modal.css';\n\nconst failureTolerance = 5;\nconst gyroscope = null;\n\nexport const Modal = ({ children, onConfirm, onCancel, ...props }) => (\n\t// useEffect(updatePosition, []);\n\n\t<div id=\"confirm\">\n\t\t<div id=\"confirm-modal\">\n\t\t\t{children}\n\t\t\t<div id=\"confirm-buttons\">\n\t\t\t\t<div id=\"performance-buttons\">\n\t\t\t\t\t<button type=\"button\" onClick={onConfirm}>\n\t\t\t\t\t\tConfirm\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"button\" onClick={onCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n);\n\nModal.propTypes = {\n\tchildren: PropTypes.node,\n\tonConfirm: PropTypes.func.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n\tchildren: null,\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Confirm from './Confirm';\nimport * as Utility from '../scripts/utility';\n\nconst failureTolerance = 3;\nconst validMethods = ['orientation', 'gyroscope'];\n\nlet gyroscope = null;\n\nexport const Gyro = ({ interval = 1, onUpdate, ...props }) => {\n\tconst [method, setMethod] = useState('orientation');\n\tconst [permitted, setPermitted] = useState(false);\n\tconst [confirmed, setConfirmed] = useState(true);\n\tconst [failures, setFailures] = useState(0);\n\n\tconst dataFailure = (err) => {\n\t\t// if(failures >= failureTolerance - 1) {\n\t\t// \tsetMethod(currentMethod => {\n\t\t// \t\tconst newMethod = currentMethod === 'gpsd' ? 'geolocation' : 'gpsd';\n\t\t// \t\tconsole.log(`Changing location method to ${newMethod}`);\n\t\t// \t\treturn newMethod;\n\t\t// \t});\n\t\t// \tsetFailures(0);\n\t\t// \treturn;\n\t\t// }\n\n\t\tsetFailures((currentFailures) => currentFailures + 1);\n\t\tconsole.log(`Failed to get position via ${method}`);\n\t\tconsole.error(err.type);\n\t};\n\n\tconst cleanupGyroscopeData = (gyro) => ({\n\t\theading: gyro.z,\n\t\tclimb: gyro.y,\n\t\ttilt: gyro.x,\n\t\tmethod,\n\t});\n\n\tconst cleanupDeviceOrientationData = (gyro) => ({\n\t\theading: gyro.webkitCompassHeading || gyro.alpha,\n\t\tclimb: gyro.beta,\n\t\ttilt: gyro.gamma,\n\t\tmethod,\n\t\tfailures,\n\t});\n\n\tconst getDataFromGyroscope = () => {\n\t\tif (navigator?.permissions?.query) {\n\t\t\tnavigator.permissions\n\t\t\t\t.query({ name: 'gyroscope' })\n\t\t\t\t.then((permission) => {\n\t\t\t\t\tif (permission.state === 'granted' || permission.state === 'prompt') {\n\t\t\t\t\t\tconsole.log('Permission granted');\n\t\t\t\t\t\tgyroscope = new window.Gyroscope({ frequency: interval });\n\n\t\t\t\t\t\tgyroscope.addEventListener('reading', (ev) => {\n\t\t\t\t\t\t\tonUpdate(cleanupGyroscopeData(gyroscope));\n\t\t\t\t\t\t\tconsole.log(`Angular velocity along the X-axis ${gyroscope.x}`);\n\t\t\t\t\t\t\tconsole.log(`Angular velocity along the Y-axis ${gyroscope.y}`);\n\t\t\t\t\t\t\tconsole.log(`Angular velocity along the Z-axis ${gyroscope.z}`);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tgyroscope.start();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdataFailure('Gyroscope API permission denied');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(dataFailure);\n\t\t}\n\t\telse if (window.Gyroscope) {\n\t\t\tconsole.log('Permission not granted');\n\n\t\t\tgyroscope = new window.Gyroscope({ frequency: interval });\n\n\t\t\tgyroscope.addEventListener('reading', (ev) => {\n\t\t\t\tonUpdate(cleanupGyroscopeData(gyroscope));\n\t\t\t\tconsole.log(`Angular velocity along the X-axis ${gyroscope.x}`);\n\t\t\t\tconsole.log(`Angular velocity along the Y-axis ${gyroscope.y}`);\n\t\t\t\tconsole.log(`Angular velocity along the Z-axis ${gyroscope.z}`);\n\t\t\t});\n\n\t\t\tgyroscope.start();\n\t\t}\n\t};\n\n\tconst getDataFromDeviceOrientation = () => {\n\t\tif (DeviceMotionEvent.requestPermission) {\n\t\t\tDeviceMotionEvent.requestPermission()\n\t\t\t\t.then((permission) => {\n\t\t\t\t\tif (permission === 'granted') {\n\t\t\t\t\t\tsetPermitted(true);\n\t\t\t\t\t\twindow.addEventListener('deviceorientation', (ev) => onUpdate(cleanupDeviceOrientationData(ev)), {});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetConfirmed(false);\n\t\t\t\t\t\tdataFailure('Device Motion API permission denied');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tif (err.name.includes('NotAllowedError')) setConfirmed(false);\n\t\t\t\t\tdataFailure(err);\n\t\t\t\t});\n\t\t}\n\t\telse {\n\t\t\twindow.addEventListener('deviceorientation', (ev) => onUpdate(cleanupDeviceOrientationData(ev)));\n\t\t}\n\t};\n\n\tconst updatePosition = () => {\n\t\tif (method === 'orientation') getDataFromDeviceOrientation();\n\t\tif (method === 'gyroscope') getDataFromGyroscope();\n\t};\n\n\tuseEffect(updatePosition, []);\n\n\tif (!permitted && !confirmed)\n\t\treturn (\n\t\t\t<Confirm\n\t\t\t\tonConfirm={() => {\n\t\t\t\t\tsetConfirmed(true);\n\t\t\t\t\tupdatePosition();\n\t\t\t\t}}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetConfirmed(true);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span className=\"show-unlit\" data-unlit={Utility.fillUnlitLCD(3, 20)}>\n\t\t\t\t\tYou must grant permission to access the gyroscope.\n\t\t\t\t</span>\n\t\t\t</Confirm>\n\t\t);\n\n\treturn null;\n};\n\nGyro.propTypes = {\n\tinterval: PropTypes.number,\n\tonUpdate: PropTypes.func.isRequired,\n};\n\nGyro.defaultProps = {\n\tinterval: 1,\n};\n\nexport default Gyro;\n","import React, { useEffect, useState } from 'react';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport Gyroscope from '../../components/Gyroscope';\n\nimport '../../css/test.css';\n\nexport const Test = props => {\n\tconst [output, setOutput] = useState([]);\n\n\tconst log = msg => {\n\t\tif(!msg) return;\n\t\tsetOutput(currOutput => [...currOutput, `${new Date().toLocaleTimeString()} - ${msg}`]);\n\t};\n\n\tconst update = () => {};\n\n\tconst init = async () => {\n\t\t// Height and Width\n\t\tlog(`Window Outer Size: ${window.outerHeight} × ${window.outerWidth}`);\n\t\tlog(`Window Inner Size: ${window.innerHeight} × ${window.innerWidth}`);\n\n\t\t// setupMotion();\n\n\t\t// if(DeviceMotionEvent.requestPermission) {\n\t\t// \tconst permission = await DeviceMotionEvent.requestPermission();\n\t\t// \t// .then(permission => {\n\t\t// \tif (permission === 'granted') {\n\t\t// \t\tlog('Permission Granted')\n\t\t// \t\twindow.addEventListener('devicemotion', ev => log(JSON.stringify(ev)));\n\t\t// \t\twindow.addEventListener('deviceorientation', ev => log(JSON.stringify(ev)));\n\n\t\t// \t}\n\t\t// \telse {\n\t\t// \t\tlog(`Permission Failed: ${permission}`);\n\t\t// \t}\n\t\t// \t// });\n\t\t// }\n\t\t// else {\n\t\t// \tlog('DeviceMotionEvent not found')\n\t\t// }\n\n\t\t// window.addEventListener('deviceorientation', ev => log(ev.alpha, ev.beta, ev.gamma, ev.webkitCompassHeading));\n\t};\n\n\tconst setupMotion = () => {\n\t\tif (typeof DeviceMotionEvent.requestPermission === 'function') {\n\t\t\t// Handle iOS 13+ devices.\n\t\t\tDeviceMotionEvent.requestPermission()\n\t\t\t\t.then((state) => {\n\t\t\t\t\tif (state === 'granted') {\n\t\t\t\t\t\twindow.addEventListener('devicemotion', ev => log(`Motion: ${JSON.stringify(ev.alpha)}`));\n\t\t\t\t\t\twindow.addEventListener('deviceorientation', ev => log(`Orientation: ${JSON.stringify(ev.alpha)}`));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.error('Request to access the orientation was rejected');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(console.error);\n\t\t}\n\t\telse {\n\t\t\t// Handle regular non iOS 13+ devices.\n\t\t\twindow.addEventListener('devicemotion', ev => log(JSON.stringify(ev.alpha)));\n\t\t\twindow.addEventListener('deviceorientation', ev => log(JSON.stringify(ev.alpha)));\n\t\t}\n\t};\n\n\t// const setupMotion = async () => {\n\t// \tif (!DeviceOrientationEvent) {\n\t// \t\tlog('Device orientation event is not supported by your browser');\n\t// \t\treturn false;\n\t// \t}\n\n\t// \tif (\n\t// \t\tDeviceOrientationEvent.requestPermission\n\t//     && typeof DeviceMotionEvent.requestPermission === 'function'\n\t// \t) {\n\t// \t\tlet permission;\n\t// \t\ttry {\n\t// \t\t\tpermission = await DeviceOrientationEvent.requestPermission();\n\t// \t\t}\n\t// \t\tcatch (err) {\n\t// \t\t\tlog(err);\n\t// \t\t\treturn false;\n\t// \t\t}\n\t// \t\tif (permission !== 'granted') {\n\t// \t\t\tlog('Request to access the device orientation was rejected');\n\t// \t\t\treturn false;\n\t// \t\t}\n\t// \t}\n\n\t// \twindow.addEventListener('devicemotion', ev => log(JSON.stringify(ev)));\n\t// \twindow.addEventListener('deviceorientation', ev => log(JSON.stringify(ev)));\n\n\t// \treturn true;\n\t// };\n\n\tuseHotkeys('*', ev => {\n\t\tlog(`Key pressed: ${ev.key} (${ev.keyCode})`);\n\t});\n\n\t// useEffect(update, [5000]); // 5 seconds\n\tuseEffect(init, []);\n\n\treturn (\n\t\t<div id=\"test\">\n\t\t\tOutput\n\t\t\t<Gyroscope onUpdate={ev => log(JSON.stringify(ev))} />\n\t\t\t<textarea\n\t\t\t\tid=\"test-output\"\n\t\t\t\tvalue={output.join('\\n\\n')}\n\t\t\t\treadOnly\n\t\t\t/>\n\t\t\t<button type=\"button\" onClick={DeviceMotionEvent.requestPermission}>Permission</button>\n\t\t\t<button type=\"button\" onClick={() => setOutput([])}>Clear</button>\n\t\t</div>\n\t);\n}\n\nexport default Test;\n","import Test from './Test';\n\nexport default Test;\n"],"names":["Modal","_ref","children","onConfirm","onCancel","props","_jsx","id","_jsxs","type","onClick","defaultProps","gyroscope","Gyro","interval","onUpdate","method","setMethod","useState","permitted","setPermitted","confirmed","setConfirmed","failures","setFailures","dataFailure","err","currentFailures","console","log","concat","error","cleanupGyroscopeData","gyro","heading","z","climb","y","tilt","x","cleanupDeviceOrientationData","webkitCompassHeading","alpha","beta","gamma","updatePosition","DeviceMotionEvent","requestPermission","then","permission","window","addEventListener","ev","catch","name","includes","getDataFromGyroscope","_navigator","_navigator$permission","navigator","permissions","query","state","Gyroscope","frequency","start","useEffect","Confirm","className","Utility","output","setOutput","msg","currOutput","Date","toLocaleTimeString","useHotkeys","key","keyCode","async","outerHeight","outerWidth","innerHeight","innerWidth","JSON","stringify","value","join","readOnly"],"sourceRoot":""}