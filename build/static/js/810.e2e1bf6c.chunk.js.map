{"version":3,"file":"static/js/810.e2e1bf6c.chunk.js","mappings":"yLAOO,MCLP,EDK6BA,IAC5B,MAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KACtBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAAIC,MAE/BC,EAAaA,KAClBH,EAAQ,IAAIE,KAAO,EAGdE,EAAUA,KAAO,IAADC,EACrB,MACMC,EAAiC,OAAxBV,EAASW,WAElBC,EAAYC,KAAKC,eAAe,GAAI,CAAEC,UAH1B,QAGqCL,WAAUM,cAAcb,GAE/E,OAAOc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACLP,EAAUQ,MAAKC,GAAgB,SAAXA,EAAEC,OAAiBC,MAAM,IAAEX,EAAUQ,MAAKC,GAAgB,WAAXA,EAAEC,OAAmBC,OACzFN,EAAAA,EAAAA,MAAA,QAAMO,UAAU,QAAOL,SAAA,CAAC,KAA6C,QAA3CV,EAAAG,EAAUQ,MAAKC,GAAgB,cAAXA,EAAEC,cAAqB,IAAAb,OAAA,EAA3CA,EAA6Cc,QAAS,QAC9E,EAGEE,EAAeC,GAEJ,CADK,gBACYvB,EAAKwB,WAAaD,EAAO,UAAY,IAEvDE,KAAK,KASrB,OANAC,EAAAA,EAAAA,YAAU,KACT,MAAMC,EAAWC,YAAYxB,EAAY,KAEzC,MAAO,IAAMyB,cAAcF,EAAS,GAClC,KAGFb,EAAAA,EAAAA,MAAA,OAAKgB,GAAG,gBAAed,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKgB,GAAG,oBAAoBT,UAAU,gBAAeL,SAAA,EACpDe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,SACjCe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,SACjCe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,SACjCe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,SACjCe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,SACjCe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,SACjCe,EAAAA,EAAAA,KAAA,QAAMV,UAAWC,EAAY,GAAGN,SAAC,YAGlCe,EAAAA,EAAAA,KAAA,OAAKD,GAAG,qBAAqBT,UAAU,aAAa,aAAYW,EAAAA,GAAyB3B,IAAW,CAAC,IAAK,MAAMW,SAC9GX,OAGF0B,EAAAA,EAAAA,KAAA,OACCD,GAAG,qBACHT,UAAU,aACV,aAAYW,EAAAA,GAAyBtB,KAAKC,eAAe,QAAS,CAAEsB,UAAW,SAAUC,OAAOlC,IAAOgB,SAEtGN,KAAKC,eAAe,QAAS,CAAEsB,UAAW,SAAUC,OAAOlC,OAExD,C","sources":["pages/DigitalClock/DigitalClock.jsx","pages/DigitalClock/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Utility from '../../scripts/utility';\nimport { selectSettingState } from '../../store/store.selectors';\n\nimport '../../css/digital-clock.css';\n\nexport const DigitalClock = (props) => {\n\tconst settings = useSelector(selectSettingState);\n\tconst [time, setTime] = useState(new Date());\n\n\tconst updateTime = () => {\n\t\tsetTime(new Date());\n\t};\n\n\tconst getTime = () => {\n\t\tconst timeStyle = 'short';\n\t\tconst hour12 = settings.timeFormat === '12';\n\n\t\tconst timeParts = Intl.DateTimeFormat([], { timeStyle, hour12 }).formatToParts(time);\n\n\t\treturn <>\n\t\t\t{timeParts.find(p => p.type === 'hour').value}:{timeParts.find(p => p.type === 'minute').value}\n\t\t\t<span className=\"units\"> {timeParts.find(p => p.type === 'dayPeriod')?.value || ''}</span>\n\t\t</>;\n\t};\n\n\tconst getDayClass = (date) => {\n\t\tconst baseClasses = ['original-font'];\n\t\tconst classes = [...baseClasses, time.getDay() === date ? 'current' : ''];\n\n\t\treturn classes.join(' ');\n\t};\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(updateTime, 1000); // 1 second\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\treturn (\n\t\t<div id=\"digital-clock\">\n\t\t\t<div id=\"digital-clock-day\" className=\"original-font\">\n\t\t\t\t<span className={getDayClass(0)}>Sun</span>\n\t\t\t\t<span className={getDayClass(1)}>Mon</span>\n\t\t\t\t<span className={getDayClass(2)}>Tue</span>\n\t\t\t\t<span className={getDayClass(3)}>Wed</span>\n\t\t\t\t<span className={getDayClass(4)}>Thu</span>\n\t\t\t\t<span className={getDayClass(5)}>Fri</span>\n\t\t\t\t<span className={getDayClass(6)}>Sat</span>\n\t\t\t</div>\n\n\t\t\t<div id=\"digital-clock-time\" className=\"show-unlit\" data-unlit={Utility.generateUnlitLCD(getTime(), [':', ' '])}>\n\t\t\t\t{getTime()}\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tid=\"digital-clock-date\"\n\t\t\t\tclassName=\"show-unlit\"\n\t\t\t\tdata-unlit={Utility.generateUnlitLCD(Intl.DateTimeFormat('en-US', { dateStyle: 'long' }).format(time))}\n\t\t\t>\n\t\t\t\t{Intl.DateTimeFormat('en-US', { dateStyle: 'long' }).format(time)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DigitalClock;\n","import DigitalClock from './DigitalClock';\n\nexport default DigitalClock;\n"],"names":["props","settings","useSelector","selectSettingState","time","setTime","useState","Date","updateTime","getTime","_timeParts$find","hour12","timeFormat","timeParts","Intl","DateTimeFormat","timeStyle","formatToParts","_jsxs","_Fragment","children","find","p","type","value","className","getDayClass","date","getDay","join","useEffect","interval","setInterval","clearInterval","id","_jsx","Utility","dateStyle","format"],"sourceRoot":""}