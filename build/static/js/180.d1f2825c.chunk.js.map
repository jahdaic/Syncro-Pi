{"version":3,"file":"static/js/180.d1f2825c.chunk.js","mappings":"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","sources":["pages/Spotify/Spotify.jsx","pages/Spotify/index.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport SpotifyWebAPI from 'spotify-web-api-node';\nimport SpotifyWebAPIServer from 'spotify-web-api-node/src/server-methods';\nimport * as Icon from 'react-bootstrap-icons';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Utility from '../../scripts/utility';\nimport { selectSpotifyState } from '../../store/store.selectors';\nimport storeActions from '../../store/store.redux';\n\nimport '../../css/spotify.css';\n\n// const SpotifyAPI = Object.assign(\n// \tnew SpotifyWebAPI({\n// \t\taccessToken: JSON.parse(localStorage.getItem('access-token'))?.access_token,\n// \t\trefreshToken: JSON.parse(localStorage.getItem('access-token'))?.refresh_token,\n// \t\tclientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\n// \t\tredirectUri: `${location.origin}/Syncro-Pi/spotify`,\n// \t}),\n// \tSpotifyWebAPIServer,\n// );\n\nexport const Spotify = (props) => {\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst spotify = useSelector(selectSpotifyState);\n\tconst marqueeRef = useRef(0);\n\tconst [spotifyAPI, setSpotifyAPI] = useState(\n\t\tObject.assign(\n\t\t\tnew SpotifyWebAPI({\n\t\t\t\taccessToken: spotify?.tokens?.access_token,\n\t\t\t\trefreshToken: spotify?.tokens?.refresh_token,\n\t\t\t\tclientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\n\t\t\t\tredirectUri: `${document.location.origin}/Syncro-Pi/spotify`,\n\t\t\t}),\n\t\t\tSpotifyWebAPIServer,\n\t\t),\n\t);\n\tconst [track, setTrack] = useState(null);\n\tconst [trackAnalysis, setTrackAnalysis] = useState(null);\n\tconst [pitches, setPitches] = useState([]);\n\tconst [lastRender, setLastRender] = useState(null);\n\n\tconst setTokens = (data) => {\n\t\tconst tokens = data.body || data;\n\n\t\tif (!tokens) return;\n\n\t\t// localStorage.setItem('access-token', JSON.stringify(tokens));\n\t\tdispatch(storeActions.setSpotify({ tokens }));\n\n\t\tspotifyAPI.setAccessToken(tokens.access_token);\n\t\tspotifyAPI.setRefreshToken(tokens.refresh_token);\n\t};\n\n\tconst handleError = (err, retry) => {\n\t\tconst { status, message } = err?.body?.error || {};\n\t\tconsole.error('Error', err?.body, err?.headers, err?.statusCode);\n\n\t\tif (status === 401) {\n\t\t\treauthorize().then(() => {\n\t\t\t\tif (retry) retry();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (err?.body?.error === 'invalid_grant') {\n\t\t\treauthorize().then(() => {\n\t\t\t\tif (retry) retry();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tsetTrack(false);\n\t};\n\n\tconst getAccessToken = () => {\n\t\tconst code = location.search\n\t\t\t.split('&')\n\t\t\t.find((p) => p.includes('code='))\n\t\t\t.split('=')[1];\n\n\t\t// Package does not support PKCE authorization\n\t\treturn fetch('https://accounts.spotify.com/api/token', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tbody: [\n\t\t\t\t`grant_type=authorization_code`,\n\t\t\t\t`code=${code}`,\n\t\t\t\t`redirect_uri=${encodeURIComponent(spotifyAPI.getRedirectURI())}`,\n\t\t\t\t`client_id=${encodeURIComponent(spotifyAPI.getClientId())}`,\n\t\t\t\t`code_verifier=${encodeURIComponent(spotify.challenge)}`,\n\t\t\t].join('&'),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then(setTokens)\n\t\t\t.catch(handleError);\n\t};\n\n\tconst authorize = async () => {\n\t\tif (!process.env.REACT_APP_SPOTIFY_CLIENT_ID) {\n\t\t\tsetTrack(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (location.search.includes('error=access_denied')) {\n\t\t\tsetTrack(false);\n\t\t\treturn;\n\t\t}\n\n\t\tif (location.search.includes(`state=${spotify.state}`)) {\n\t\t\tgetAccessToken().then(() => navigate('/spotify'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst scopes = ['user-read-playback-state', 'user-modify-playback-state'];\n\t\tconst authURL = spotifyAPI.createAuthorizeURL(scopes, spotify.state);\n\n\t\tlet challenge = '';\n\t\tif(!spotify.challenge) {\n\t\t\tchallenge = Utility.randomString(69);\n\t\t\tdispatch(storeActions.setSpotify({challenge}));\n\t\t}\n\n\t\tconst challengeCode = Utility.base64URLEncode(await Utility.hashString(spotify.challenge || challenge));\n\n\t\twindow.location.href = `${authURL}&code_challenge_method=S256&code_challenge=${challengeCode}`;\n\t};\n\n\tconst reauthorize = () => {\n\t\tif (!spotifyAPI.getRefreshToken()) {\n\t\t\tauthorize();\n\t\t\treturn Promise.reject();\n\t\t}\n\n\t\t// Issues with spotify-web-api-node make this necessary for now\n\t\treturn fetch('https://accounts.spotify.com/api/token', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tbody: [\n\t\t\t\t`grant_type=refresh_token`,\n\t\t\t\t`refresh_token=${encodeURIComponent(spotifyAPI.getRefreshToken())}`,\n\t\t\t\t`client_id=${encodeURIComponent(spotifyAPI.getClientId())}`,\n\t\t\t].join('&'),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then(setTokens)\n\t\t\t.then(updateStatus)\n\t\t\t.catch(handleError);\n\n\t\t// spotifyAPI.refreshAccessToken().then(setTokens).catch(handleError);\n\t};\n\n\tconst getTrackAnalysis = () => {\n\t\tif (!track?.item?.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tspotifyAPI\n\t\t\t.getAudioAnalysisForTrack(track?.item?.id)\n\t\t\t.then((data) => {\n\t\t\t\tif (data.body === null) setTrackAnalysis(-1);\n\t\t\t\telse setTrackAnalysis({ ...data.body, timestamp: Date.now() });\n\t\t\t})\n\t\t\t.catch(handleError);\n\t};\n\n\tconst updateStatus = () => {\n\t\tif (!spotifyAPI.getAccessToken()) {\n\t\t\tauthorize();\n\t\t\treturn;\n\t\t}\n\n\t\tspotifyAPI\n\t\t\t.getMyCurrentPlaybackState()\n\t\t\t.then((data) => {\n\t\t\t\tif (data.body === null) setTrack(-1);\n\t\t\t\telse setTrack({ ...data.body, timestamp: Date.now() });\n\t\t\t})\n\t\t\t.catch(handleError);\n\t};\n\n\tconst updatePitches = (currentTrack, currentAnalysis) => {\n\t\tif (!track?.is_playing) return;\n\n\t\tconst progress = getCurrentProgress() / 1000;\n\t\tconst segment = trackAnalysis?.segments?.find((s) => s.start >= progress);\n\n\t\tsetPitches(segment?.pitches || []);\n\t};\n\n\tconst playPause = () => {\n\t\tif (track?.is_playing) {\n\t\t\tspotifyAPI.pause().then(updateStatus).catch(handleError);\n\t\t\treturn;\n\t\t}\n\n\t\tspotifyAPI.play().then(updateStatus).catch(handleError);\n\t};\n\n\tconst next = () => {\n\t\tspotifyAPI.skipToNext().then(updateStatus).catch(handleError);\n\t};\n\n\tconst previous = () => {\n\t\tspotifyAPI.skipToPrevious().then(updateStatus).catch(handleError);\n\t};\n\n\tconst getCurrentProgress = () =>\n\t\ttrack?.is_playing ? (track?.progress_ms || 0) + Date.now() - (track?.timestamp || 0) : track?.progress_ms;\n\n\tuseHotkeys('*', (ev) => {\n\t\tconsole.log(ev);\n\t\tif (ev.key === 'MediaPlayPause') playPause();\n\t\tif (ev.key === 'MediaTrackPrevious') previous();\n\t\tif (ev.key === 'MediaTrackNext') next();\n\t});\n\n\t// Fetch track info\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!spotifyAPI.getAccessToken()) return;\n\t\t\tupdateStatus();\n\t\t}, 2500); // 2.5 seconds\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\t// Update progress bar\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => setLastRender(Date.now()), 1000); // 1 second\n\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\t// Update graph\n\t// useEffect(() => {\n\t// \tconst interval = setInterval(updatePitches, 100); // 0.1 second\n\n\t// \treturn () => clearInterval(interval);\n\t// }, [track, trackAnalysis]);\n\n\t// Get track audio analysis on track change\n\t// useEffect(getTrackAnalysis, [track?.item?.id])\n\n\t// Get initial play state\n\tuseEffect(updateStatus, []);\n\n\t// Loading or authenticating\n\tif (track === null)\n\t\treturn (\n\t\t\t<div className=\"loading-screen\">\n\t\t\t\t<Icon.Boombox className=\"big-icon\" />\n\t\t\t\t<div id=\"weather-description\">Music loading...</div>\n\t\t\t</div>\n\t\t);\n\n\t// Error authenticating\n\tif (track === false)\n\t\treturn (\n\t\t\t<div className=\"loading-screen\">\n\t\t\t\t<Icon.VolumeMute className=\"big-icon\" />\n\t\t\t\t<div id=\"weather-description\">Music could not load</div>\n\t\t\t</div>\n\t\t);\n\n\t// No music currently playing on Spotify\n\tif (track === -1)\n\t\treturn (\n\t\t\t<div className=\"loading-screen\">\n\t\t\t\t<Icon.Boombox className=\"big-icon\" />\n\t\t\t\t<div id=\"weather-description\">Music not playing</div>\n\t\t\t</div>\n\t\t);\n\n\treturn (\n\t\t<div id=\"spotify\">\n\t\t\t<div id=\"spotify-song\">\n\t\t\t\t<div id=\"spotify-album\" style={{ backgroundImage: `url(${track?.item?.album?.images[1]?.url})` }} />\n\t\t\t\t<div id=\"spotify-name\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={marqueeRef}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t(marqueeRef.current.offsetWidth || 0) < (marqueeRef.current.scrollWidth || 0) ? '' : 'show-unlit'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata-unlit={Utility.generateUnlitLCD(track?.item?.name || 'Unknown Song', [':'])}\n\t\t\t\t\t\tdata-overflow={(marqueeRef.current.offsetWidth || 0) < (marqueeRef.current.scrollWidth || 0)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{track?.item?.name || 'Unknown Song'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"spotify-artist\"\n\t\t\t\t\tclassName=\"show-unlit\"\n\t\t\t\t\tdata-unlit={Utility.generateUnlitLCD(track?.item?.artists[0]?.name || 'Unknown Artist', [':'])}\n\t\t\t\t>\n\t\t\t\t\t{track?.item?.artists[0]?.name || 'Unknown Artist'}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"spotify-progress\">\n\t\t\t\t<div\n\t\t\t\t\tid=\"spotify-progress-current\"\n\t\t\t\t\tclassName=\"show-unlit\"\n\t\t\t\t\tdata-unlit={Utility.generateUnlitLCD(Utility.msToDuration(getCurrentProgress()), [':'])}\n\t\t\t\t>\n\t\t\t\t\t{Utility.msToDuration(getCurrentProgress())}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"spotify-progress-total\"\n\t\t\t\t\tclassName=\"show-unlit\"\n\t\t\t\t\tdata-unlit={Utility.generateUnlitLCD(Utility.msToDuration(track?.item?.duration_ms), [':'])}\n\t\t\t\t>\n\t\t\t\t\t{Utility.msToDuration(track?.item?.duration_ms)}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"spotify-progress-fill\"\n\t\t\t\t\tstyle={{ width: `${Utility.ratioToPercent(getCurrentProgress(), track?.item?.duration_ms)}%` }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div id=\"spotify-controls\">\n\t\t\t\t<div id=\"spotify-prev\" onClick={previous} onKeyDown={previous} role=\"button\" alt=\"Previous Song\" tabIndex={0}>\n\t\t\t\t\t<Icon.SkipStartFill />\n\t\t\t\t</div>\n\t\t\t\t<div id=\"spotify-play\" onClick={playPause} onKeyDown={playPause} role=\"button\" tabIndex={0}>\n\t\t\t\t\t{track?.is_playing ? <Icon.PauseFill /> : <Icon.PlayFill />}\n\t\t\t\t</div>\n\t\t\t\t<div id=\"spotify-next\" onClick={next} onKeyDown={next} role=\"button\" alt=\"Next Song\" tabIndex={0}>\n\t\t\t\t\t<Icon.SkipEndFill />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{/* <div id=\"spotify-graph\"> */}\n\t\t\t{/* eslint-disable-next-line react/no-array-index-key */}\n\t\t\t{/* {pitches.map((p, i) => <div key={i} style={{height: `${p}em`}} />)} */}\n\t\t\t{/* </div> */}\n\t\t</div>\n\t);\n};\n\nexport default Spotify;\n","import Spotify from './Spotify';\n\nexport default Spotify;"],"names":["props","_spotify$tokens","_spotify$tokens2","_track$item3","_track$item3$album","_track$item3$album$im","_track$item4","_track$item5","_track$item6","_track$item6$artists$","_track$item7","_track$item7$artists$","_track$item8","_track$item9","_track$item10","dispatch","useDispatch","navigate","useNavigate","location","useLocation","spotify","useSelector","selectSpotifyState","marqueeRef","useRef","spotifyAPI","setSpotifyAPI","useState","Object","assign","SpotifyWebAPI","accessToken","tokens","access_token","refreshToken","refresh_token","clientId","process","redirectUri","concat","document","origin","SpotifyWebAPIServer","track","setTrack","trackAnalysis","setTrackAnalysis","pitches","setPitches","lastRender","setLastRender","setTokens","data","body","storeActions","setSpotify","setAccessToken","setRefreshToken","handleError","err","retry","_err$body","_err$body2","status","message","error","console","headers","statusCode","reauthorize","then","authorize","async","search","includes","state","getAccessToken","code","split","find","p","fetch","method","encodeURIComponent","getRedirectURI","getClientId","challenge","join","response","json","catch","authURL","createAuthorizeURL","Utility","challengeCode","window","href","getRefreshToken","updateStatus","Promise","reject","getMyCurrentPlaybackState","timestamp","Date","now","playPause","is_playing","pause","play","next","skipToNext","previous","skipToPrevious","getCurrentProgress","progress_ms","useHotkeys","ev","log","key","useEffect","interval","setInterval","clearInterval","_jsxs","className","children","_jsx","Icon","id","style","backgroundImage","item","album","images","url","ref","current","offsetWidth","scrollWidth","name","artists","duration_ms","width","onClick","onKeyDown","role","alt","tabIndex"],"sourceRoot":""}