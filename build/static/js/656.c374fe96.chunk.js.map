{"version":3,"file":"static/js/656.c374fe96.chunk.js","mappings":"mMASA,MCPA,EDSsBA,IACrB,MAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAMF,EAAAA,EAAAA,IAAYG,EAAAA,KACjBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAAIC,OAC9BC,EAAKC,IAAUH,EAAAA,EAAAA,UAAS,CAAEI,MAAO,KAAMC,IAAK,KAAMC,SAAU,KAAMC,KAAM,KAAMC,MAAO,GAAIC,OAAQ,KAElGC,EAAkBA,IAAMC,OAAOC,KAAKC,OAAS,OAAHjB,QAAG,IAAHA,OAAG,EAAHA,EAAKkB,QAAS,IAAIC,SAAS,EAAG,KAE9E,OACCC,EAAAA,EAAAA,KAAA,OAAKC,GAAG,QAAOC,UACdC,EAAAA,EAAAA,MAAA,OAAKF,GAAG,cAAcG,UAAU,aAAa,aAAYC,EAAAA,GAAyBX,KAAmBQ,SAAA,CACnGR,KACDM,EAAAA,EAAAA,KAAA,QAAMC,GAAG,cAAcG,UAAU,gBAAeF,SAC3B,aAAnBzB,EAAS6B,MAAuB,MAAQ,aAGtC,C","sources":["pages/Speed/Speed.jsx","pages/Speed/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as Icon from 'react-bootstrap-icons';\nimport { useSelector } from 'react-redux';\nimport Location from '../../components/Location';\nimport * as Utility from '../../scripts/utility';\nimport { selectGPSState, selectSettingState } from '../../store/store.selectors';\n\nimport '../../css/speed.css';\n\nconst resolution = 100; // 100 milliseconds\n\nexport const Speed = (props) => {\n\tconst settings = useSelector(selectSettingState);\n\tconst gps = useSelector(selectGPSState);\n\tconst [time, setTime] = useState(new Date());\n\tconst [run, setRun] = useState({ start: null, end: null, topSpeed: null, to60: null, times: [], speeds: [] });\n\n\tconst getCurrentSpeed = () => String(Math.floor(gps?.speed || 0)).padStart(3, '0');\n\n\treturn (\n\t\t<div id=\"speed\">\n\t\t\t<div id=\"speed-speed\" className=\"show-unlit\" data-unlit={Utility.generateUnlitLCD(getCurrentSpeed())}>\n\t\t\t\t{getCurrentSpeed()}\n\t\t\t\t<span id=\"speed-units\" className=\"original-font\">\n\t\t\t\t\t{settings.units === 'imperial' ? 'MPH' : 'Km/H'}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Speed;\n","import Speed from './Speed';\n\nexport default Speed;"],"names":["props","settings","useSelector","selectSettingState","gps","selectGPSState","time","setTime","useState","Date","run","setRun","start","end","topSpeed","to60","times","speeds","getCurrentSpeed","String","Math","floor","speed","padStart","_jsx","id","children","_jsxs","className","Utility","units"],"sourceRoot":""}