{"version":3,"file":"static/js/241.829e9be0.chunk.js","mappings":"yLAOO,MCLP,EDKoBA,IACnB,MAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,KACrBC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAE/BC,EAAMC,IACPA,GACJH,GAAUI,GAAc,IAAIA,EAAW,GAADC,QAAK,IAAIC,MAAOC,qBAAoB,OAAAF,OAAMF,KAAO,EAuBxF,OAFAK,EAAAA,EAAAA,YAhBaC,KACZP,EAAIQ,KAAKC,UAAUf,EAAQgB,YAE3B,MACMC,GADU,IAAIC,aACCC,OAAOnB,EAAQgB,WASpC,OAPAV,EAAIW,GAEDjB,EAAQgB,UACVI,EAAAA,GAAmBpB,EAAQgB,WAAWK,MAAKC,GAAQhB,EAAIgB,KAEvDhB,EAAI,gBAEE,MAAQ,GAGA,KAGfiB,EAAAA,EAAAA,MAAA,OAAKC,GAAG,OAAMC,SAAA,CAAC,UAEdC,EAAAA,EAAAA,KAAA,YACCF,GAAG,cACHG,MAAOxB,EAAOyB,KAAK,QACnBC,UAAQ,MAEJ,C","sources":["pages/Test/Test.jsx","pages/Test/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Utility from '../../scripts/utility';\nimport { selectSpotifyState } from '../../store/store.selectors';\n\nimport '../../css/test.css';\n\nexport const Test = props => {\n\tconst spotify = useSelector(selectSpotifyState);\n\tconst [output, setOutput] = useState([]);\n\n\tconst log = msg => {\n\t\tif(!msg) return;\n\t\tsetOutput(currOutput => [...currOutput, `${new Date().toLocaleTimeString()} - ${msg}`]);\n\t};\n\n\tconst update = () => {};\n\n\tconst init = () => {\n\t\tlog(JSON.stringify(spotify.challenge))\n\n\t\tconst encoder = new TextEncoder();\n\t\tconst data = encoder.encode(spotify.challenge);\n\n\t\tlog(data);\n\n\t\tif(spotify.challenge)\n\t\t\tUtility.hashString(spotify.challenge).then(hash => log(hash));\n\t\telse\n\t\t\tlog('NO CHALLENGE')\n\n\t\treturn () => {};\n\t};\n\n\tuseEffect(init, []);\n\n\treturn (\n\t\t<div id=\"test\">\n\t\t\tOutput\n\t\t\t<textarea\n\t\t\t\tid=\"test-output\"\n\t\t\t\tvalue={output.join('\\n\\n')}\n\t\t\t\treadOnly\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Test;\n","import Test from './Test';\n\nexport default Test;\n"],"names":["props","spotify","useSelector","selectSpotifyState","output","setOutput","useState","log","msg","currOutput","concat","Date","toLocaleTimeString","useEffect","init","JSON","stringify","challenge","data","TextEncoder","encode","Utility","then","hash","_jsxs","id","children","_jsx","value","join","readOnly"],"sourceRoot":""}